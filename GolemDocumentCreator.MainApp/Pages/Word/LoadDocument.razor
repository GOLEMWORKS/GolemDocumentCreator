@page "/loaddoc"

<InputFile 
    OnChange="@OnInputFileChange"
    multiple/>

@if (fileNames.Count > 0)
{
    <ul>
        @foreach (var fileName in fileNames)
        {
            <li class="text-primary">
                Файл @fileName загружен успешно
             </li>
        }
    </ul>

    <button
        onclick="@ClearFileList">
        Очистить список загрузок!
    </button>
}


@if (errors.Count > 0)
{
    <div class="alert-danger">
        <h2>При загрузке файлов возникли следующие ошибки:</h2>
        <ul class="text-danger">
            @foreach(var er in errors)
            {
                <li>@er</li>
            }
        </ul>
    </div>
}

@code {
    private long maxFileSize = 1024*1024*30;
    private int maxAllowedFiles = 10;
    private List<string> fileNames = new();
    private List<string> errors = new();

    private async Task ClearFileList() => fileNames.Clear();

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        using var content = new MultipartFormDataContent();

        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
        {
            var fileContent = new StreamContent(file.OpenReadStream(maxFileSize));
            fileContent.Headers.ContentType = new MediaTypeHeaderValue(file.ContentType);

            fileNames.Add(file.Name);

            content.Add(
                content: fileContent,
                name: "\"userfiles\"",
                fileName: file.Name
            );
        }
    }

    private async Task LoadFile(InputFileChangeEventArgs e)
    {
        errors.Clear();
        if (e.FileCount > maxAllowedFiles)
        {
            errors.Add($"Ошибка: Загрузка более чем {maxAllowedFiles} может негативно сказаться на скорости и качестве работы! \n Вы загрузили {e.FileCount} файла(ов)!");
            return;
        }

        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
        {
            string newFileName = Path.ChangeExtension(
                Path.GetRandomFileName(), 
                Path.GetExtension(file.Name));            
        }
    }
}